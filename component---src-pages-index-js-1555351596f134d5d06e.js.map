{"version":3,"sources":["webpack:///./src/components/loading-dialog.js","webpack:///./src/components/barcode-scanner.js","webpack:///./src/components/page-scan-barcode.js","webpack:///./src/components/page-enter-info.js","webpack:///./src/components/page-finished.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["LoadingDialog","render","react_default","a","createElement","Dialog_default","open","this","props","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","LinearProgress_default","style","width","height","DialogContentText_default","code","React","Component","BarcodeScanner","className","position","autoPlay","preload","src","muted","playsInline","top","left","componentDidMount","_this","Quagga","init","inputStream","name","type","target","document","querySelector","decoder","readers","numOfWorkers","cpus","length","multiple","locate","frequency","err","console","log","start","onProcessed","result","drawingCtx","canvas","ctx","overlay","drawingCanvas","dom","boxes","clearRect","parseInt","getAttribute","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","line","onDetected","stop","onFoundBarcode","componentWillUnmount","PageScanBarcode","state","curBarcode","_this2","Fragment","padding","Typography_default","variant","gutterBottom","component","align","barcode_scanner","barcode","PageEnterInfo","TextField_default","placeholder","required","autoComplete","onChange","event","onNameChange","value","PageFinished","passGenerateURLBase","IndexPage","curName","loadingDialogOpen","activeStep","handleNext","setState","window","location","handleBack","handleReset","getStepContent","step","page_scan_barcode","page_enter_info","page_finished","Error","layout","Paper_default","boxShadow","backgroundColor","Button_default","onClick","marginRight","loading_dialog","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","background","marginBottom","margin","maxWidth","gatsby_browser_entry","to","textDecoration","Layout","Helmet_default","title","site","siteMetadata","meta","content","lang","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-1555351596f134d5d06e.js","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport 'typeface-roboto';\n\nclass LoadingDialog extends React.Component {\n  render() {\n    return (\n      <div>\n        <Dialog\n          open={ this.props.open }\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Generating Pass...\"}</DialogTitle>\n          <DialogContent>\n            <LinearProgress />\n            <div style={{ width: \"100%\", height: 16 }} />\n\n            <DialogContentText id=\"alert-dialog-description\">\n              If this takes more than a 10 seconds, feel free to refresh the page.\n              <div style={{ width: \"100%\", height: 6 }} />\n              <code>{ this.props.code }</code>\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default LoadingDialog;","import React from 'react'\nimport Quagga from 'quagga'\nimport cpus from 'cpus'\n\n/*\n * This component uses Quagga to scan code-128 barcodes.\n */\nclass BarcodeScanner extends React.Component {\n    render() {\n        return (\n            <div id=\"barcodeScannerView\" className=\"viewport\" style={{\n                position: 'relative'\n            }}>\n                <video className=\"videoCamera\" autoPlay={true} preload=\"auto\" src=\"\" muted={true}\n                        playsInline={true} style={{\n                            width: \"100%\"\n                        }}>\n                </video>\n                <canvas className=\"drawingBuffer\" style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\"\n                }}></canvas>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        Quagga.init({\n            inputStream : {\n              name : \"Live\",\n              type : \"LiveStream\",\n              target: document.querySelector('#barcodeScannerView'),\n            },\n            decoder : {\n              readers : [\"code_128_reader\"]\n            },\n            numOfWorkers: cpus().length,\n            multiple: false,\n            locate: true,\n            frequency: 10\n        }, function(err) {\n            if (err) {\n                console.log(err);\n                return\n            }\n            console.log(\"Initialization finished. Ready to start\");\n            Quagga.start();\n        });\n\n        Quagga.onProcessed(function(result) {\n            var drawingCtx = Quagga.canvas.ctx.overlay,\n                drawingCanvas = Quagga.canvas.dom.overlay;\n    \n            if (result) {\n                if (result.boxes) {\n                    drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute(\"width\")), parseInt(drawingCanvas.getAttribute(\"height\")));\n                    result.boxes.filter(function (box) {\n                        return box !== result.box;\n                    }).forEach(function (box) {\n                        Quagga.ImageDebug.drawPath(box, {x: 0, y: 1}, drawingCtx, {color: \"green\", lineWidth: 2});\n                    });\n                }\n    \n                if (result.box) {\n                    Quagga.ImageDebug.drawPath(result.box, {x: 0, y: 1}, drawingCtx, {color: \"#00F\", lineWidth: 2});\n                }\n    \n                if (result.codeResult && result.codeResult.code) {\n                    Quagga.ImageDebug.drawPath(result.line, {x: 'x', y: 'y'}, drawingCtx, {color: 'red', lineWidth: 3});\n                }\n            }\n        });\n\n        let onDetected = (result) => {\n            Quagga.stop();\n            this.props.onFoundBarcode(result.codeResult.code);\n        }\n\n        Quagga.onDetected(onDetected);\n    }\n\n    componentWillUnmount() {\n        Quagga.stop();\n    }\n}\nexport default BarcodeScanner\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nimport BarcodeScanner from '../components/barcode-scanner'\n\nclass PageScanBarcode extends React.Component {\n    state = {\n        curBarcode: \"\",\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                    padding: 16\n                }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Scan Member Card\n                    </Typography>\n                    <Typography component=\"p\" variant=\"body1\" align=\"left\">\n                        Welcome! Scan your membership card here to generate a pass for \n                        Apple Wallet.\n                    </Typography>\n                </div>\n                <BarcodeScanner onFoundBarcode={(barcode) => {\n                  this.props.onFoundBarcode(barcode);\n                }} />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PageScanBarcode","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nclass PageEnterInfo extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                    padding: 16\n                }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Membership Information\n                    </Typography>\n                    <Typography component=\"p\" variant=\"body1\" gutterBottom>\n                        Please enter your full name.\n                    </Typography>\n                    <TextField name=\"name\" placeholder=\"Full name\" \n                               required=\"true\" autoComplete=\"name\"\n                               onChange={ (event) => {\n                                   this.props.onNameChange(event.target.value);\n                               } }>\n                    </TextField>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PageEnterInfo","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nclass PageFinished extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                    padding: 16\n                }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Enjoy!\n                    </Typography>\n                    <Typography component=\"p\" variant=\"body1\" gutterBottom>\n                        The pass will show up on your lock screen when you get\n                        close to the gym. You can use it wherever you normally\n                        use your card.\n                    </Typography>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PageFinished","import React from 'react'\n// import { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport LoadingDialog from '../components/loading-dialog'\nimport PageScanBarcode from '../components/page-scan-barcode'\nimport PageEnterInfo from '../components/page-enter-info'\nimport PageFinished from '../components/page-finished'\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst passGenerateURLBase = \"https://qsohh8av3a.execute-api.us-west-2.amazonaws.com/dev?\";\n\nclass IndexPage extends React.Component {\n  state = {\n    curBarcode: \"\",\n    curName: \"\",\n    loadingDialogOpen: false,\n    activeStep: 0\n  };\n\n  handleNext = () => {\n    if (this.state.activeStep === 1) {\n      // we need to generate the pass\n      this.setState(state => ({\n        loadingDialogOpen: true\n      }));\n      window.location = passGenerateURLBase + \"memberName=\" + this.state.curName\n        + \"&memberNum=\" + this.state.curBarcode;\n      this.setState(state => ({\n        loadingDialogOpen: false,\n        activeStep: state.activeStep + 1\n      }));\n    }\n    else {\n      this.setState(state => ({\n        activeStep: state.activeStep + 1,\n      }));\n    }\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  getStepContent(step) {\n    switch (step) {\n      case 0:\n        return <PageScanBarcode onFoundBarcode={(barcode) => { \n          this.setState({ curBarcode: barcode, activeStep: 1 }) \n        }} />;\n      case 1:\n        return <PageEnterInfo curBarcode={ this.state.curBarcode }\n                              onNameChange={(name) => {\n          this.setState({ curName: name }) \n        }} />;\n      case 2:\n        return <PageFinished />;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  render() {\n    const { activeStep } = this.state;\n\n    return (\n      <Layout>\n        <React.Fragment>\n          <Paper style={{\n            \"boxShadow\": \"0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)\",\n            \"backgroundColor\": \"0xFFF\"\n          }}>\n            <React.Fragment>\n              { this.getStepContent(activeStep) }\n            </React.Fragment>\n            <div style={{\n              padding: 16\n            }}>\n              { activeStep !== 0 && (\n                <Button onClick={this.handleBack} style={{\n                  marginRight: 8\n                }}>\n                  Back\n                </Button>\n              )}\n              { \n                (activeStep !== 0) && (activeStep !== 2) && (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleNext}\n                  >\n                    {activeStep === 1 ? 'Generate Pass' : 'Next'}\n                  </Button>\n                )\n              }\n            </div>\n          </Paper>\n        </React.Fragment>\n        <LoadingDialog code={ this.state.curBarcode } \n                          open={ this.state.loadingDialogOpen } />\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: '#2F4858',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 700,\n        padding: '1.05rem 1.0875rem',\n      }}\n    >\n      <h2 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h2>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 700,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}